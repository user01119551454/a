plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply from: "../artifacts.gradle"

def getProps(path) {

    Properties props = new Properties()

    props.load(new FileInputStream(file(path)))

    return props

}

android {
    signingConfigs {
        release {
            storeFile file('G:\\projects\\CICDCDSimulation\\release.jks')
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
        staging {
            storeFile file('G:\\projects\\CICDCDSimulation\\staging.jks')
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
    }
    compileSdk 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.morse.ci_cd_cd_simulation"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {

        release {

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            ext.config = getProps('../config/release_properties.properties')

            ext.config.each { p ->

                if(p.key == "ApplicationName"){

                    resValue "string","app_name", p.value

                }

                else if(p.key=="ApplicationIdSyffix"){

                    applicationIdSuffix p.value

                }else
                    buildConfigField 'String', p.key, p.value
            }


        }

        staging {

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'


            ext.config = getProps('../config/test_properties.properties')

            ext.config.each { p ->

                if (p.key == "ApplicationName") {

                    resValue "string", "app_name", p.value.replace('"', '')

                } else if (p.key == "ApplicationIdSyffix") {

                    applicationIdSuffix p.value

                } else {

                    buildConfigField 'String', p.key, p.value

                }

            }

        }
        debug {

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.config = getProps('../config/development_properties.properties')

            ext.config.each { p ->

                if (p.key == "ApplicationName") {

                    resValue "string", "app_name", p.value

                } else if (p.key == "ApplicationIdSyffix") {

                    applicationIdSuffix p.value

                } else

                    buildConfigField 'String', p.key, p.value


            }

        }
    }

    buildFeatures {
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/library_release.kotlin_module'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}